.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "MAKEFILE DERSI"  "" "" ""
.SH NAME
makefile dersi \- 
.sp
makefile formatı yazılan bir kaynak kodu derlemek ve yüklemek için kullanılan ne yaygın derleme talimatı formatlarından biridir.
.sp
Bu yazıda sizlere makefile dosyası nasıl yazılır anlatacağım.
.SH GENEL BAKIŞ
.sp
Örneğin aşağıdaki gibi bir \fBC\fP kodumuz olsun
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
#include <stdio.h>
int main(){
    puts("Hello world!\en");
    return 0;
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Bunu aşağıdaki komutu kulanarak derleriz ve kurarız.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ gcc \-o hello hello\&.c
$ install hello /usr/bin/hello
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Makefile dosyalarının bölüm tanımlamalarında girintileme amaçlı \fBTab\fP kullanılır.
.sp
Şimdi aşağıdaki makefile dosyasını inceleyelim.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
PREFIX=/usr
build:
        $(CC) \-o hello hello.c

install:
        install hello $(DESTDIR)/$(PREFIX)/bin/hello
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Burada \fBPREFIX\fP, \fBCC\fP, \fBDESTDIR\fP gibi parametreler değişkendir. Bu değişkenler derleme esnasında değiştirilebilir.
.sp
Bu makefile dosyasını kullanarak derlemeyi ve yüklemeyi aşağıdaki gibi yaparız.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ make
$ make install
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Görüldüğü gibi derleme ve yükleme işlemi daha kolay ve nasıl derleneceğini basitçe belirtmiş olduk.
.sp
Burada kullandığımız değişkenler şu şekilde açılnabilir.
.INDENT 0.0
.IP \(bu 2
PREFIX = /usr olarak tanımladık.
.IP \(bu 2
DESTDIR = paket sistemleri paket yaparken bu değişkeni otomatik olarak değiştirir. Kurulacak kök dizin konumudur.
.IP \(bu 2
CC = derleyicinin adıdır. Bu değişkeni ayarlayarak derleyiciyi değiştirebilirsiniz.
.UNINDENT
.sp
Make komutuna eğer hiç parametre verimezsek ilk baştaki bölümü çalıştırır. Biz ilk başta \fBbuild\fP tanımladığımız için make komutu build çalıştırır. make komutuna parametre olarak bölüm verirsek o bölüm çalıştırılır.
.SH DEĞIŞKEN IŞLEMLERI
.sp
Değişken tanımlamak için \fBvariable=value\fP şeklinde tanımlanabilir. değişkeni kullanırken de \fB$()\fP işareti arasına alınır. Örneğin:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
yazi=hello world
hello:
        echo $(yazi)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Bu değişkeni \fBmake yazi=deneme123\fP şeklinde komut vererek değiştirebiliriz.
.sp
Var olan bir değişkene ekleme yapmak için \fB+=\fP ifadesi kullanılır.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
yazi=hello
yazi+=world
hello:
        echo $(yazi)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Eğer \fB$\fP işareti kullanmanız gereken bir durum oluşursa \fB$$\fP ifadesi kullanabilirsiniz. Örneğin:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B hello:
bash \-c "echo $$HOME"
.UNINDENT
.UNINDENT
.UNINDENT
.SH BÖLÜMLER
.sp
Makefile yazarken bölümler tanımlanır ve eğer bölümün adı belirtilmemişse ilk bölüm çalıştırılır. Bölümler arası bağımlılık vermek için aşağıdaki gibi bir kullanım yapılmalıdır.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
yazi: sayi test
        echo "Hello world"
sayi:
        echo 12
test:
        echo test123
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Yukarıdaki dosyayı çalıştırdığımızda sırasıyla \fBsayi\fP \-> \fBtest\fP \-> \fByazi\fP bölümleri çalıştırılır.
.\" Generated by docutils manpage writer.
.
